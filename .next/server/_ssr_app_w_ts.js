/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "(ssr)/./app/w.ts":
/*!******************!*\
  !*** ./app/w.ts ***!
  \******************/
/***/ (() => {

eval("let chunks = [];\nlet startTime;\nlet fileSize;\nlet chunkSize = 16000;\nlet currentChunk = 0;\nlet totalChunks;\nlet currentProgress = 0;\nlet prevProgress = 0;\nself.addEventListener(\"message\", (event)=>{\n    if (event.data.status === \"fileInfo\") {\n        fileSize = event.data.fileSize;\n        totalChunks = Math.ceil(fileSize / chunkSize);\n    } else if (event.data === \"download\") {\n        const blob = new Blob(chunks, {\n            type: \"application/octet-stream\"\n        });\n        const endTime = performance.now();\n        const elapsedTime = endTime - startTime;\n        // Sending both the blob and the elapsed time to the main thread\n        self.postMessage({\n            blob: blob,\n            timeTaken: elapsedTime\n        });\n        // Reset chunks and currentChunk for future data chunks\n        chunks = [];\n        currentChunk = 0;\n    } else {\n        // If this is the first event, start the timer\n        if (!startTime) {\n            startTime = performance.now();\n        }\n        // Append data to the chunks array\n        chunks.push(new Uint8Array(event.data));\n        // Calculate progress and send it to the main thread\n        currentChunk++;\n        const progress = currentChunk / totalChunks * 100;\n        // To reduce the frequency of progress updates, only send updates when there's a significant change\n        const roundedProgress = Math.floor(progress);\n        if (roundedProgress !== prevProgress) {\n            prevProgress = roundedProgress;\n            self.postMessage({\n                progress: prevProgress\n            });\n        }\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TaGFyZU5lYXIvLi9hcHAvdy50cz8yODAyIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBjaHVua3M6YW55ID0gW107XG5sZXQgc3RhcnRUaW1lOmFueTtcbmxldCBmaWxlU2l6ZTtcbmxldCBjaHVua1NpemUgPSAxNjAwMDtcbmxldCBjdXJyZW50Q2h1bmsgPSAwO1xubGV0IHRvdGFsQ2h1bmtzOmFueTtcbmxldCBjdXJyZW50UHJvZ3Jlc3MgPSAwO1xubGV0IHByZXZQcm9ncmVzcyA9IDA7XG5cbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgKGV2ZW50KSA9PiB7XG4gIGlmIChldmVudC5kYXRhLnN0YXR1cyA9PT0gXCJmaWxlSW5mb1wiKSB7XG4gICAgZmlsZVNpemUgPSBldmVudC5kYXRhLmZpbGVTaXplO1xuICAgIHRvdGFsQ2h1bmtzID0gTWF0aC5jZWlsKGZpbGVTaXplIC8gY2h1bmtTaXplKTtcbiAgfSBlbHNlIGlmIChldmVudC5kYXRhID09PSBcImRvd25sb2FkXCIpIHtcbiAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoY2h1bmtzLCB7IHR5cGU6IFwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCIgfSk7XG4gICAgY29uc3QgZW5kVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgIGNvbnN0IGVsYXBzZWRUaW1lID0gZW5kVGltZSAtIHN0YXJ0VGltZTtcblxuICAgIC8vIFNlbmRpbmcgYm90aCB0aGUgYmxvYiBhbmQgdGhlIGVsYXBzZWQgdGltZSB0byB0aGUgbWFpbiB0aHJlYWRcbiAgICBzZWxmLnBvc3RNZXNzYWdlKHtcbiAgICAgIGJsb2I6IGJsb2IsXG4gICAgICB0aW1lVGFrZW46IGVsYXBzZWRUaW1lLFxuICAgIH0pO1xuXG4gICAgLy8gUmVzZXQgY2h1bmtzIGFuZCBjdXJyZW50Q2h1bmsgZm9yIGZ1dHVyZSBkYXRhIGNodW5rc1xuICAgIGNodW5rcyA9IFtdO1xuICAgIGN1cnJlbnRDaHVuayA9IDA7XG4gIH0gZWxzZSB7XG4gICAgLy8gSWYgdGhpcyBpcyB0aGUgZmlyc3QgZXZlbnQsIHN0YXJ0IHRoZSB0aW1lclxuICAgIGlmICghc3RhcnRUaW1lKSB7XG4gICAgICBzdGFydFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICB9XG5cbiAgICAvLyBBcHBlbmQgZGF0YSB0byB0aGUgY2h1bmtzIGFycmF5XG4gICAgY2h1bmtzLnB1c2gobmV3IFVpbnQ4QXJyYXkoZXZlbnQuZGF0YSkpO1xuXG4gICAgLy8gQ2FsY3VsYXRlIHByb2dyZXNzIGFuZCBzZW5kIGl0IHRvIHRoZSBtYWluIHRocmVhZFxuICAgIGN1cnJlbnRDaHVuaysrO1xuICAgIGNvbnN0IHByb2dyZXNzID0gKGN1cnJlbnRDaHVuayAvIHRvdGFsQ2h1bmtzKSAqIDEwMDtcblxuICAgIC8vIFRvIHJlZHVjZSB0aGUgZnJlcXVlbmN5IG9mIHByb2dyZXNzIHVwZGF0ZXMsIG9ubHkgc2VuZCB1cGRhdGVzIHdoZW4gdGhlcmUncyBhIHNpZ25pZmljYW50IGNoYW5nZVxuICAgIGNvbnN0IHJvdW5kZWRQcm9ncmVzcyA9IE1hdGguZmxvb3IocHJvZ3Jlc3MpO1xuICAgIGlmIChyb3VuZGVkUHJvZ3Jlc3MgIT09IHByZXZQcm9ncmVzcykge1xuICAgICAgcHJldlByb2dyZXNzID0gcm91bmRlZFByb2dyZXNzO1xuICAgICAgc2VsZi5wb3N0TWVzc2FnZSh7XG4gICAgICAgIHByb2dyZXNzOiBwcmV2UHJvZ3Jlc3MsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn0pO1xuIl0sIm5hbWVzIjpbImNodW5rcyIsInN0YXJ0VGltZSIsImZpbGVTaXplIiwiY2h1bmtTaXplIiwiY3VycmVudENodW5rIiwidG90YWxDaHVua3MiLCJjdXJyZW50UHJvZ3Jlc3MiLCJwcmV2UHJvZ3Jlc3MiLCJzZWxmIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwiZGF0YSIsInN0YXR1cyIsIk1hdGgiLCJjZWlsIiwiYmxvYiIsIkJsb2IiLCJ0eXBlIiwiZW5kVGltZSIsInBlcmZvcm1hbmNlIiwibm93IiwiZWxhcHNlZFRpbWUiLCJwb3N0TWVzc2FnZSIsInRpbWVUYWtlbiIsInB1c2giLCJVaW50OEFycmF5IiwicHJvZ3Jlc3MiLCJyb3VuZGVkUHJvZ3Jlc3MiLCJmbG9vciJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsU0FBYSxFQUFFO0FBQ25CLElBQUlDO0FBQ0osSUFBSUM7QUFDSixJQUFJQyxZQUFZO0FBQ2hCLElBQUlDLGVBQWU7QUFDbkIsSUFBSUM7QUFDSixJQUFJQyxrQkFBa0I7QUFDdEIsSUFBSUMsZUFBZTtBQUVuQkMsS0FBS0MsZ0JBQWdCLENBQUMsV0FBVyxDQUFDQztJQUNoQyxJQUFJQSxNQUFNQyxJQUFJLENBQUNDLE1BQU0sS0FBSyxZQUFZO1FBQ3BDVixXQUFXUSxNQUFNQyxJQUFJLENBQUNULFFBQVE7UUFDOUJHLGNBQWNRLEtBQUtDLElBQUksQ0FBQ1osV0FBV0M7SUFDckMsT0FBTyxJQUFJTyxNQUFNQyxJQUFJLEtBQUssWUFBWTtRQUNwQyxNQUFNSSxPQUFPLElBQUlDLEtBQUtoQixRQUFRO1lBQUVpQixNQUFNO1FBQTJCO1FBQ2pFLE1BQU1DLFVBQVVDLFlBQVlDLEdBQUc7UUFDL0IsTUFBTUMsY0FBY0gsVUFBVWpCO1FBRTlCLGdFQUFnRTtRQUNoRU8sS0FBS2MsV0FBVyxDQUFDO1lBQ2ZQLE1BQU1BO1lBQ05RLFdBQVdGO1FBQ2I7UUFFQSx1REFBdUQ7UUFDdkRyQixTQUFTLEVBQUU7UUFDWEksZUFBZTtJQUNqQixPQUFPO1FBQ0wsOENBQThDO1FBQzlDLElBQUksQ0FBQ0gsV0FBVztZQUNkQSxZQUFZa0IsWUFBWUMsR0FBRztRQUM3QjtRQUVBLGtDQUFrQztRQUNsQ3BCLE9BQU93QixJQUFJLENBQUMsSUFBSUMsV0FBV2YsTUFBTUMsSUFBSTtRQUVyQyxvREFBb0Q7UUFDcERQO1FBQ0EsTUFBTXNCLFdBQVcsQUFBQ3RCLGVBQWVDLGNBQWU7UUFFaEQsbUdBQW1HO1FBQ25HLE1BQU1zQixrQkFBa0JkLEtBQUtlLEtBQUssQ0FBQ0Y7UUFDbkMsSUFBSUMsb0JBQW9CcEIsY0FBYztZQUNwQ0EsZUFBZW9CO1lBQ2ZuQixLQUFLYyxXQUFXLENBQUM7Z0JBQ2ZJLFVBQVVuQjtZQUNaO1FBQ0Y7SUFDRjtBQUNGIiwiZmlsZSI6Iihzc3IpLy4vYXBwL3cudHMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./app/w.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["(ssr)/./app/w.ts"]();
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;